Index: lib/screens/innerdetails/restaurantDetails.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/innerdetails/restaurantDetails.dart b/lib/screens/innerdetails/restaurantDetails.dart
--- a/lib/screens/innerdetails/restaurantDetails.dart	(revision 4c29f217b5c7d1d548ff0465f62d08b7f3108c34)
+++ b/lib/screens/innerdetails/restaurantDetails.dart	(date 1653285475990)
@@ -14,6 +14,7 @@
 import 'package:foodzer_customer_app/screens/innerdetails/section/productCategory.dart';
 import 'package:foodzer_customer_app/screens/innerdetails/section/productCategoryItem.dart';
 import 'package:foodzer_customer_app/screens/innerdetails/section/restaurantProductsList.dart';
+import 'package:foodzer_customer_app/utils/designConfig.dart';
 import 'package:foodzer_customer_app/utils/helper.dart';
 import 'package:foodzer_customer_app/utils/shimmer.dart';
 import 'package:http/http.dart' as http;
@@ -109,7 +110,6 @@
                     ),
                   ],
                 ),
-
                 Padding(
                   padding: EdgeInsets.only(left: 10, top: 30),
                   child: ShimmerWidget.rectangular(
@@ -170,10 +170,10 @@
                   ),
                 ),
                 Expanded(
-                    child: ListView.separated(separatorBuilder: (context,index){
-
-                      return Divider();
-                    },
+                    child: ListView.separated(
+                        separatorBuilder: (context, index) {
+                          return Divider();
+                        },
                         itemCount: 3,
                         shrinkWrap: true,
                         itemBuilder: (context, index) {
@@ -211,10 +211,7 @@
                               )
                             ],
                           ));
-                        }
-
-                        )
-                )
+                        }))
               ],
             )
           : Consumer<ApplicationProvider>(builder: (context, provider, child) {
@@ -222,370 +219,735 @@
                 children: [
                   !isRestContainItems
                       ? Center(child: Text("No item found"))
-                      : CustomScrollView(
-                          // scrollDirection: Axis.vertical,
-                          shrinkWrap: true,
-                          physics: ScrollPhysics(),
+                      : VerticalScrollableTabView(
+                          tabController: tabController!,
+                          listItemData: provider.categoryList,
+                          verticalScrollPosition: VerticalScrollPosition.begin,
+                          eachItemChild: (object, index) {
+                            // print(index.toString());
+                            List<Item> filteredList = [];
+                            if (provider.categoryList[index].categoryId == 0) {
+                              filteredList = provider.selectedRestModel.items!;
+                            } else {
+                              filteredList = provider.selectedRestModel.items!
+                                  .where((product) => (product.categoryId ==
+                                      provider.categoryList[index].categoryId))
+                                  .toList();
+                            }
+                            return Theme(
+                              data: ThemeData()
+                                  .copyWith(dividerColor: Colors.transparent),
+                              child: Column(
+                                mainAxisAlignment: MainAxisAlignment.start,
+                                crossAxisAlignment: CrossAxisAlignment.start,
+                                children: [
+                                  Padding(
+                                    padding: const EdgeInsets.symmetric(
+                                        horizontal: 8.0),
+                                    child: Container(
+                                      width: MediaQuery.of(context).size.width,
+                                      child: Material(
+                                        color: Colors.white,
+                                        elevation: 0,
+                                        shape: RoundedRectangleBorder(
+                                            borderRadius: BorderRadius.only(
+                                                topRight: Radius.circular(20),
+                                                topLeft: Radius.circular(20))),
+                                        child: Padding(
+                                          padding: const EdgeInsets.symmetric(
+                                              vertical: 8.0, horizontal: 8),
+                                          child: Text(
+                                            provider.categoryList[index]
+                                                .categoryName!,
+                                            style: TextStyle(
+                                                fontWeight: FontWeight.w600,
+                                                fontSize: 18),
+                                          ),
+                                        ),
+                                      ),
+                                    ),
+                                  ),
+                                  null == filteredList ||
+                                          filteredList.length == 0
+                                      ? Center(
+                                          child: CircularProgressIndicator(),
+                                        )
+                                      : Padding(
+                                          padding: const EdgeInsets.only(
+                                              bottom: 20.0),
+                                          child: ListView.separated(
+                                            separatorBuilder: (context, index) {
+                                              return Divider(
+                                                height: 1,
+                                                thickness: 1,
+                                                color: Colors.grey[300],
+                                              );
+                                            },
+                                            // scrollDirection: Axis.vertical,
+                                            // controller: scrollController,
+                                            physics:
+                                                NeverScrollableScrollPhysics(),
+                                            shrinkWrap: true,
+                                            itemCount: filteredList.length,
+                                            itemBuilder: (BuildContext context,
+                                                int index) {
+                                              Item itemModel =
+                                                  filteredList[index];
+                                              // Future.delayed(Duration.zero, () async {
+                                              //   provider
+                                              //       .currentSelectedCategory(itemModel.categoryId!);                });
+
+                                              return Container(
+                                                height: 120,
+                                                child: Padding(
+                                                  padding: const EdgeInsets
+                                                          .symmetric(
+                                                      horizontal: 12.0),
+                                                  child: Material(
+                                                    color: Colors.white,
+                                                    elevation: 0,
+                                                    shape: RoundedRectangleBorder(
+                                                        borderRadius: index ==
+                                                                filteredList
+                                                                        .length -
+                                                                    1
+                                                            ? BorderRadius.only(
+                                                                bottomLeft: Radius
+                                                                    .circular(
+                                                                        20),
+                                                                bottomRight:
+                                                                    Radius
+                                                                        .circular(
+                                                                            20))
+                                                            : BorderRadius
+                                                                .zero),
+                                                    child: Padding(
+                                                      padding:
+                                                          const EdgeInsets.all(
+                                                              2.0),
+                                                      child: InkWell(
+                                                        onTap: () {
+                                                          // if (null==itemModel.enteredQty ||
+                                                          //     itemModel.enteredQty == 0 || (itemModel.enteredQty! > 0 &&
+                                                          //     itemModel.isAddon == 0)) {
+                                                          //   singleItemDetails(context, itemModel);
+                                                          //
+                                                          //
+                                                          // }  else {
+                                                          //   addDuplicateItem(itemModel);
+                                                          // }
+                                                          // // provider.getItemId(itemModel.itemId!);
+                                                          // // if (itemModel.isAddon == 1) {
+                                                          // //   getAddons();
+                                                          // // }
+                                                        },
+                                                        child: Column(
+                                                          mainAxisAlignment:
+                                                              MainAxisAlignment
+                                                                  .center,
+                                                          crossAxisAlignment:
+                                                              CrossAxisAlignment
+                                                                  .center,
+                                                          children: [
+                                                            Container(
+                                                                decoration:
+                                                                    BoxDecoration(
+                                                                  border:
+                                                                      Border(
+                                                                    right: null !=
+                                                                            itemModel
+                                                                                .enteredQty
+                                                                        ? BorderSide(
+                                                                            color: Colors
+                                                                                .deepOrangeAccent,
+                                                                            width:
+                                                                                5)
+                                                                        : BorderSide
+                                                                            .none,
+                                                                  ),
+                                                                  // borderRadius: BorderRadius.only( topRight: Radius.circular(20),bottomRight: Radius.circular(20))
+                                                                ),
+                                                                child: Row(
+                                                                  mainAxisAlignment:
+                                                                      MainAxisAlignment
+                                                                          .start,
+                                                                  crossAxisAlignment:
+                                                                      CrossAxisAlignment
+                                                                          .start,
+                                                                  children: [
+                                                                    Expanded(
+                                                                      child:
+                                                                          Column(
+                                                                        crossAxisAlignment:
+                                                                            CrossAxisAlignment.start,
+                                                                        children: [
+                                                                          Row(
+                                                                            crossAxisAlignment:
+                                                                                CrossAxisAlignment.start,
+                                                                            children: [
+                                                                              itemModel.itemVegNonveg == "1"
+                                                                                  ? Image.asset(
+                                                                                      Helper.getAssetName("veg.png", "virtual"),
+                                                                                      height: 15,
+                                                                                    )
+                                                                                  : Image.asset(
+                                                                                      Helper.getAssetName("non-veg.png", "virtual"),
+                                                                                      height: 15,
+                                                                                    ),
+                                                                              SizedBox(
+                                                                                width: 5,
+                                                                              ),
+                                                                              Text(
+                                                                                null != itemModel.enteredQty ? '${itemModel.enteredQty.toString()}x' : "",
+                                                                                style: TextStyle(fontSize: 12, fontWeight: FontWeight.w500, color: Colors.deepOrange),
+                                                                              ),
+                                                                              SizedBox(
+                                                                                width: 3,
+                                                                              ),
+                                                                              Expanded(
+                                                                                child: Text(itemModel.itemName!, style: TextStyle(fontWeight: FontWeight.w600, height: 1.3)),
+                                                                              ),
+                                                                            ],
+                                                                          ),
+                                                                          SizedBox(
+                                                                            height:
+                                                                                5,
+                                                                          ),
+                                                                          Text(
+                                                                              itemModel.itemDescription!,
+                                                                              style: TextStyle(fontSize: 12, color: Colors.grey.shade700)),
+                                                                          SizedBox(
+                                                                            height:
+                                                                                5,
+                                                                          ),
+                                                                          Text(
+                                                                              'INR ${itemModel.itemPrice}',
+                                                                              style: TextStyle(fontWeight: FontWeight.w500, fontSize: 16)),
+                                                                        ],
+                                                                      ),
+                                                                      flex: 9,
+                                                                    ),
+                                                                    Expanded(
+                                                                      child:
+                                                                          Container(
+                                                                        child: Image
+                                                                            .network(
+                                                                          // 'https://i5.peapod.com/c/NY/NYO1E.png',
+                                                                          itemModel
+                                                                              .itemImage!,
+                                                                          height:
+                                                                              80,
+                                                                          width:
+                                                                              80,
+                                                                          fit: BoxFit
+                                                                              .fill,
+                                                                          loadingBuilder: (BuildContext context,
+                                                                              Widget child,
+                                                                              ImageChunkEvent? loadingProgress) {
+                                                                            if (loadingProgress ==
+                                                                                null)
+                                                                              return child;
+                                                                            return Center(
+                                                                              child: CircularProgressIndicator(
+                                                                                color: Colors.deepOrangeAccent,
+                                                                                value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
+                                                                              ),
+                                                                            );
+                                                                          },
+                                                                        ),
+                                                                      ),
+                                                                      flex: 4,
+                                                                    )
+                                                                  ],
+                                                                )),
+                                                            // SizedBox(height:5),
+                                                            // Container(height: 1,color: Colors.grey[400],)
+                                                          ],
+                                                        ),
+                                                      ),
+                                                    ),
+                                                  ),
+                                                ),
+                                              );
+                                            },
+                                          ),
+                                        ),
+                                ],
+                              ),
+                            );
+                          },
                           slivers: [
-                            SliverAppBar(
-                              elevation: 0,
-                              expandedHeight: 150,
-                              backgroundColor: Colors.white,
-                              pinned: true,
-                              leading: Padding(
-                                padding: const EdgeInsets.only(
-                                    left: 10.0, top: 10.0),
-                                child: Container(
-                                  decoration: BoxDecoration(
-                                    color: Colors.white,
-                                    shape: BoxShape.circle,
-                                  ),
-                                  child: IconButton(
-                                    onPressed: () {
-                                      Navigator.of(context).pop();
-                                    },
-                                    icon: Icon(
-                                      Icons.arrow_back,
-                                      color: Colors.black,
-                                      size: 30,
-                                    ),
-                                  ),
-                                ),
-                              ),
-                              actions: [
-                                Padding(
-                                  padding: const EdgeInsets.only(
-                                      right: 10.0, top: 10.0),
-                                  child: Container(
-                                    decoration: BoxDecoration(
-                                      color: Colors.white,
-                                      shape: BoxShape.circle,
-                                    ),
-                                    child: IconButton(
-                                      onPressed: () {
-                                        Navigator.of(context).push(
-                                            MaterialPageRoute(
-                                                builder: (context) =>
-                                                    SearchDetails()));
-                                      },
-                                      icon: Icon(
-                                        Icons.search,
-                                        color: Colors.black,
-                                        size: 30,
-                                      ),
-                                    ),
-                                  ),
-                                ),
-                              ],
-                              centerTitle: true,
-                              title: Text(
-                                null != provider.selectedRestModel.branchDetails
-                                    ? provider.selectedRestModel.branchDetails!
-                                        .merchantBranchName!
-                                    : "",
-                                style: TextStyle(
-                                    color: Colors.black,
-                                    fontSize: 20,
-                                    fontWeight: FontWeight.w600),
-                              ),
-                              flexibleSpace: FlexibleSpaceBar(
-                                collapseMode: CollapseMode.parallax,
-                                background: Image.network(
-                                  null !=
-                                          provider
-                                              .selectedRestModel
-                                              .branchDetails!
-                                              .merchantBranchCoverImage
-                                      ? provider
-                                          .selectedRestModel
-                                          .branchDetails!
-                                          .merchantBranchCoverImage!
-                                      : provider.selectedRestModel
-                                          .branchDetails!.merchantBranchImage!,
+                            SliverLayoutBuilder(
+                              builder: (context, constraints) {
+                                return SliverAppBar(
+                                  elevation: 0,
+                                  expandedHeight: 150,
+                                  backgroundColor: Colors.white,
+                                  pinned: true,
+                                  leading: Padding(
+                                    padding: const EdgeInsets.only(
+                                        left: 10.0, top: 10.0),
+                                    child: Container(
+                                      decoration: BoxDecoration(
+                                        color: Colors.white,
+                                        shape: BoxShape.circle,
+                                      ),
+                                      child: IconButton(
+                                        onPressed: () {
+                                          Navigator.of(context).pop();
+                                        },
+                                        icon: Icon(
+                                          Icons.arrow_back,
+                                          color: Colors.black,
+                                          size: 30,
+                                        ),
+                                      ),
+                                    ),
+                                  ),
+                                  actions: [
+                                    Padding(
+                                      padding: const EdgeInsets.only(
+                                          right: 10.0, top: 10.0),
+                                      child: Container(
+                                        decoration: BoxDecoration(
+                                          color: Colors.white,
+                                          shape: BoxShape.circle,
+                                        ),
+                                        child: IconButton(
+                                          onPressed: () {
+                                            Navigator.of(context).push(
+                                                MaterialPageRoute(
+                                                    builder: (context) =>
+                                                        SearchDetails()));
+                                          },
+                                          icon: Icon(
+                                            Icons.search,
+                                            color: Colors.black,
+                                            size: 30,
+                                          ),
+                                        ),
+                                      ),
+                                    ),
+                                  ],
+                                  centerTitle: true,
+                                  title: Text(
+                                    null !=
+                                            provider
+                                                .selectedRestModel.branchDetails
+                                        ? provider.selectedRestModel
+                                            .branchDetails!.merchantBranchName!
+                                        : "",
+                                    style: TextStyle(
+                                        color: Colors.black,
+                                        fontSize: 20,
+                                        fontWeight: FontWeight.w600),
+                                  ),
+                                  flexibleSpace: FlexibleSpaceBar(
+                                    collapseMode: CollapseMode.parallax,
+                                    background: Image.network(
+                                      null !=
+                                              provider
+                                                  .selectedRestModel
+                                                  .branchDetails!
+                                                  .merchantBranchCoverImage
+                                          ? provider
+                                              .selectedRestModel
+                                              .branchDetails!
+                                              .merchantBranchCoverImage!
+                                          : provider
+                                              .selectedRestModel
+                                              .branchDetails!
+                                              .merchantBranchImage!,
 
-                                  // _singleRestModel.branchDetails!.merchantBranchImage!,
-                                  // 'https://cdn-prod.medicalnewstoday.com/content/images/articles/314/314819/delicious-buffet-foods.jpg',
-                                  fit: BoxFit.cover,
-                                ),
-                              ),
-                            ),
-                            SliverList(
-                                delegate: SliverChildListDelegate([
-                              Padding(
-                                padding: const EdgeInsets.only(
-                                    left: 20.0,
-                                    right: 20.0,
-                                    bottom: 10,
-                                    top: 20.0),
-                                child: Column(
-                                  crossAxisAlignment: CrossAxisAlignment.start,
-                                  children: [
-                                    Row(
-                                      mainAxisAlignment:
-                                          MainAxisAlignment.spaceBetween,
-                                      children: [
-                                        Text(
-                                            // Provider.of<ApplicationProvider>(context ,listen: false).selectedRestModel.branchDetails!.merchantBranchName!,
-                                            provider
-                                                .selectedRestModel
-                                                .branchDetails!
-                                                .merchantBranchName!,
-                                            style: TextStyle(
-                                                fontSize: 20,
-                                                fontWeight: FontWeight.bold)),
-                                        InkWell(
-                                          onTap: () {
-                                            Navigator.of(context).push(
-                                                MaterialPageRoute(
-                                                    builder: (BuildContext
-                                                            context) =>
-                                                        RestaurantInfoScreen(
-                                                            provider
-                                                                .selectedRestModel)));
-                                          },
-                                          child: Text(
-                                            'Info',
-                                            style: TextStyle(
-                                                color: Colors.deepOrange,
-                                                fontWeight: FontWeight.w600),
-                                          ),
-                                        )
-                                      ],
-                                    ),
-                                    SizedBox(
-                                      height: 8,
-                                    ),
-                                    Text(provider
-                                        .selectedRestModel.branchCuisine!),
-                                    SizedBox(
-                                      height: 25,
-                                    ),
-                                    Row(
-                                      children: [
-                                        Icon(
-                                          null !=
-                                                      provider.selectedRestModel
-                                                          .reviews!.numOfRows &&
-                                                  provider.selectedRestModel
-                                                          .reviews!.numOfRows ==
-                                                      0
-                                              ? Icons.sentiment_dissatisfied
-                                              : Icons.tag_faces,
-                                          color: null !=
-                                                      provider.selectedRestModel
-                                                          .reviews!.numOfRows &&
-                                                  provider.selectedRestModel
-                                                          .reviews!.numOfRows ==
-                                                      0
-                                              ? Colors.yellow[600]
-                                              : Colors.grey.shade700,
-                                          size: 25,
-                                        ),
-                                        SizedBox(width: 10),
-                                        RichText(
-                                          text: new TextSpan(
-                                            children: [
-                                              TextSpan(
-                                                text: null !=
-                                                            provider
-                                                                .selectedRestModel
-                                                                .reviews!
-                                                                .numOfRows &&
-                                                        provider
-                                                                .selectedRestModel
-                                                                .reviews!
-                                                                .numOfRows ==
-                                                            0
-                                                    ? "No review yet "
-                                                    : provider
-                                                        .selectedRestModel
-                                                        .reviews!
-                                                        .branchAvgRating
-                                                        .toString(),
-                                                style: new TextStyle(
-                                                  color: Colors.black,
-                                                ),
-                                              ),
-                                              new TextSpan(
-                                                text:
-                                                    'Based on (${provider.selectedRestModel.reviews!.numOfRows}) ratings ',
-                                                style: new TextStyle(
-                                                  fontSize: 12,
-                                                  color: Colors.grey,
-                                                ),
-                                              ),
-                                            ],
-                                          ),
-                                        ),
-                                        Expanded(
-                                          child: InkWell(
-                                            onTap: () {
-                                              Navigator.of(context).push(
-                                                  MaterialPageRoute(
-                                                      builder: (BuildContext
-                                                              context) =>
-                                                          ReviewRestaurent()));
-                                            },
-                                            child: Text(
-                                              'Reviews',
-                                              style: TextStyle(
-                                                  color: Colors.deepOrange,
-                                                  fontWeight: FontWeight.w600),
-                                              textAlign: TextAlign.right,
-                                            ),
-                                          ),
-                                        ),
-                                      ],
-                                    ),
-                                    Divider(
-                                      height: 25,
-                                    ),
-                                    Row(
-                                      children: [
-                                        Icon(
-                                          Icons.access_time,
-                                          color: Colors.grey.shade700,
-                                          size: 25,
-                                        ),
-                                        SizedBox(width: 10),
-                                        RichText(
-                                          text: new TextSpan(
-                                            children: [
-                                              new TextSpan(
-                                                text:
-                                                    'Within ${provider.selectedRestModel.branchDetails!.merchantBranchOrderTime} mins ',
-                                                style: new TextStyle(
-                                                    color: Colors.black),
-                                              ),
-                                              // new TextSpan(
-                                              //   text:
-                                              //       '(${provider.selectedRestModel.branchDetails!.countryCurrency} 0.590 delivery) ',
-                                              //   style: new TextStyle(
-                                              //       fontSize: 12,
-                                              //       color: Colors.grey),
-                                              // ),
-                                            ],
-                                          ),
-                                        ),
-                                      ],
-                                    ),
-                                    Divider(
-                                      height: 25,
-                                    ),
-                                    Row(
-                                      children: [
-                                        Icon(
-                                          Icons.local_offer_outlined,
-                                          color: Colors.pinkAccent,
-                                          size: 25,
-                                        ),
-                                        SizedBox(width: 10),
-                                        Text('2 RO Off Orders 7 Rials or More!',
-                                            style: TextStyle(
-                                              color: Colors.pinkAccent,
-                                              fontWeight: FontWeight.w500,
-                                            ))
-                                      ],
-                                    ),
-                                    Divider(
-                                      height: 25,
-                                    ),
-                                    Container(
-                                      padding: EdgeInsets.all(15),
-                                      width: Helper.getScreenWidth(context),
-                                      decoration: BoxDecoration(
-                                          borderRadius:
-                                              BorderRadius.circular(12.0),
-                                          color: Colors.grey.shade100),
-                                      child: Text(
-                                        'Delivered by us, with live tracking',
-                                        style: TextStyle(
-                                          color: Colors.black,
-                                          fontWeight: FontWeight.w600,
-                                        ),
-                                      ),
-                                    ),
+                                      // _singleRestModel.branchDetails!.merchantBranchImage!,
+                                      // 'https://cdn-prod.medicalnewstoday.com/content/images/articles/314/314819/delicious-buffet-foods.jpg',
+                                      fit: BoxFit.cover,
+                                    ),
+                                  ),
+                                );
+                              },
 
-                                    // ProductCategoryItem(widget.merchantBranchId,
-                                    //     widget.lat, widget.lng),
-                                  ],
-                                ),
-                              )
-                            ])),
+                            ),
                             SliverPersistentHeader(
-                                pinned: true,
-                                floating: false,
-                                delegate: PersistentHeader(
-                                    TabBar(
-                                      indicatorWeight: 2.0,
-                                      onTap: (int val) {
-                                        VerticalScrollableTabBarStatus.setIndex(
-                                            val);
-                                      },
-                                      // physics: const AlwaysScrollableScrollPhysics(),
-                                      isScrollable: true,
-                                      labelColor: Colors.white,
-                                      unselectedLabelColor: Colors.black,
-                                      indicatorColor: Colors.transparent,
-                                      padding: EdgeInsets.zero,
-                                      controller: tabController,
-                                      indicator: BoxDecoration(
-                                        color: Colors.red,
-                                        borderRadius: BorderRadius.circular(10),
-                                      ),
-                                      labelStyle: const TextStyle(
-                                          fontSize: 12,
-                                          fontWeight: FontWeight.w500),
-                                      tabs: provider.categoryList
-                                          .map((t) => Tab(
-                                                text: t.categoryName,
-                                              ))
-                                          .toList(),
-                                    ),
-                                    tabController!
-
-                                    // pinned: true,
-                                    )),
-                            SliverList(
-                                delegate: SliverChildListDelegate([
-                              Padding(
-                                padding: const EdgeInsets.all(4),
-                                child: Column(
-                                  crossAxisAlignment: CrossAxisAlignment.start,
-                                  children: [
-                                    // Row(
-                                    //   children: [
-                                    //     Text(
-                                    //       'VEG',
-                                    //       style: TextStyle(
-                                    //           fontWeight: FontWeight.w600),
-                                    //     ),
-                                    //     Switch(
-                                    //       value: isSwitched,
-                                    //       onChanged: (value) {
-                                    //         setState(() {
-                                    //           isSwitched = value;
-                                    //         });
-                                    //       },
-                                    //       activeTrackColor: Colors.green.shade100,
-                                    //       activeColor: Colors.green.shade300,
-                                    //     ),
-                                    //   ],
-                                    // ),
-                                    // SizedBox(
-                                    //   height: 20,
-                                    // ),
-                                    RestaurantProductsList(
-                                        isSwitched, tabController),
-                                    // SizedBox(
-                                    //   height: 30,
-                                    // ),
-                                  ],
-                                ),
-                              ),
-                            ]))
-                          ],
-                        ),
+                              floating: false,
+                              delegate: PersistentHeader(
+                                TabBar(
+                                  indicatorWeight: 2.0,
+                                  onTap: (int val) {
+                                    print(VerticalScrollableTabBarStatus.isOnTapIndex.toString());
+                                    print(val.toString());
+                                    // if(val<VerticalScrollableTabBarStatus.isOnTapIndex) {
+                                      VerticalScrollableTabBarStatus.setIndex(
+                                          val );
+                                    // }else{
+                                    //   VerticalScrollableTabBarStatus.setIndex(
+                                    //       val );
+                                    // }
+                                    // // tabController!.animateTo(val);
+                                    // tabController!
+                                    //     .animateTo((0) % 10);
+                                    // tabController!.animateTo((tabController!.index + 1) % 2);
+                                  },
+
+                                  physics: const AlwaysScrollableScrollPhysics(),
+                                  isScrollable: true,
+                                  labelColor: Colors.white,
+                                  unselectedLabelColor: Colors.black,
+                                  indicatorColor: Colors.transparent,
+                                  padding: EdgeInsets.zero,
+                                  controller: tabController,
+                                  indicator: DesignConfig.boxDecorationContainer(Colors.red, 10.0),
+                                  labelStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.w500),
+                                  tabs: provider.categoryList
+                                      .map((t) => Tab(
+                                    text: t.categoryName,
+                                  ))
+                                      .toList(),
+                                ),tabController!
+                              ),
+                              pinned: true,
+                            ),
+                          ],
+                        ),
+                  // CustomScrollView(
+                  //   // scrollDirection: Axis.vertical,
+                  //   shrinkWrap: true,
+                  //   physics: ScrollPhysics(),
+                  //   slivers: [
+                  //     SliverAppBar(
+                  //       elevation: 0,
+                  //       expandedHeight: 150,
+                  //       backgroundColor: Colors.white,
+                  //       pinned: true,
+                  //       leading: Padding(
+                  //         padding: const EdgeInsets.only(left: 10.0, top: 10.0),
+                  //         child: Container(
+                  //           decoration: BoxDecoration(
+                  //             color: Colors.white,
+                  //             shape: BoxShape.circle,
+                  //           ),
+                  //           child: IconButton(
+                  //             onPressed: () {
+                  //               Navigator.of(context).pop();
+                  //             },
+                  //             icon: Icon(
+                  //               Icons.arrow_back,
+                  //               color: Colors.black,
+                  //               size: 30,
+                  //             ),
+                  //           ),
+                  //         ),
+                  //       ),
+                  //       actions: [
+                  //         Padding(
+                  //           padding:
+                  //               const EdgeInsets.only(right: 10.0, top: 10.0),
+                  //           child: Container(
+                  //             decoration: BoxDecoration(
+                  //               color: Colors.white,
+                  //               shape: BoxShape.circle,
+                  //             ),
+                  //             child: IconButton(
+                  //               onPressed: () {
+                  //                 Navigator.of(context).push(MaterialPageRoute(
+                  //                     builder: (context) => SearchDetails()));
+                  //               },
+                  //               icon: Icon(
+                  //                 Icons.search,
+                  //                 color: Colors.black,
+                  //                 size: 30,
+                  //               ),
+                  //             ),
+                  //           ),
+                  //         ),
+                  //       ],
+                  //       centerTitle: true,
+                  //       title: Text(
+                  //         null != provider.selectedRestModel.branchDetails
+                  //             ? provider.selectedRestModel.branchDetails!
+                  //                 .merchantBranchName!
+                  //             : "",
+                  //         style: TextStyle(
+                  //             color: Colors.black,
+                  //             fontSize: 20,
+                  //             fontWeight: FontWeight.w600),
+                  //       ),
+                  //       flexibleSpace: FlexibleSpaceBar(
+                  //         collapseMode: CollapseMode.parallax,
+                  //         background: Image.network(
+                  //           null !=
+                  //                   provider.selectedRestModel.branchDetails!
+                  //                       .merchantBranchCoverImage
+                  //               ? provider.selectedRestModel.branchDetails!
+                  //                   .merchantBranchCoverImage!
+                  //               : provider.selectedRestModel.branchDetails!
+                  //                   .merchantBranchImage!,
+                  //
+                  //           // _singleRestModel.branchDetails!.merchantBranchImage!,
+                  //           // 'https://cdn-prod.medicalnewstoday.com/content/images/articles/314/314819/delicious-buffet-foods.jpg',
+                  //           fit: BoxFit.cover,
+                  //         ),
+                  //       ),
+                  //     ),
+                  //     SliverList(
+                  //         delegate: SliverChildListDelegate([
+                  //       Padding(
+                  //         padding: const EdgeInsets.only(
+                  //             left: 20.0, right: 20.0, bottom: 10, top: 20.0),
+                  //         child: Column(
+                  //           crossAxisAlignment: CrossAxisAlignment.start,
+                  //           children: [
+                  //             Row(
+                  //               mainAxisAlignment:
+                  //                   MainAxisAlignment.spaceBetween,
+                  //               children: [
+                  //                 Text(
+                  //                     // Provider.of<ApplicationProvider>(context ,listen: false).selectedRestModel.branchDetails!.merchantBranchName!,
+                  //                     provider.selectedRestModel.branchDetails!
+                  //                         .merchantBranchName!,
+                  //                     style: TextStyle(
+                  //                         fontSize: 20,
+                  //                         fontWeight: FontWeight.bold)),
+                  //                 InkWell(
+                  //                   onTap: () {
+                  //                     Navigator.of(context).push(
+                  //                         MaterialPageRoute(
+                  //                             builder: (BuildContext context) =>
+                  //                                 RestaurantInfoScreen(provider
+                  //                                     .selectedRestModel)));
+                  //                   },
+                  //                   child: Text(
+                  //                     'Info',
+                  //                     style: TextStyle(
+                  //                         color: Colors.deepOrange,
+                  //                         fontWeight: FontWeight.w600),
+                  //                   ),
+                  //                 )
+                  //               ],
+                  //             ),
+                  //             SizedBox(
+                  //               height: 8,
+                  //             ),
+                  //             Text(provider.selectedRestModel.branchCuisine!),
+                  //             SizedBox(
+                  //               height: 25,
+                  //             ),
+                  //             Row(
+                  //               children: [
+                  //                 Icon(
+                  //                   null !=
+                  //                               provider.selectedRestModel
+                  //                                   .reviews!.numOfRows &&
+                  //                           provider.selectedRestModel.reviews!
+                  //                                   .numOfRows ==
+                  //                               0
+                  //                       ? Icons.sentiment_dissatisfied
+                  //                       : Icons.tag_faces,
+                  //                   color: null !=
+                  //                               provider.selectedRestModel
+                  //                                   .reviews!.numOfRows &&
+                  //                           provider.selectedRestModel.reviews!
+                  //                                   .numOfRows ==
+                  //                               0
+                  //                       ? Colors.yellow[600]
+                  //                       : Colors.grey.shade700,
+                  //                   size: 25,
+                  //                 ),
+                  //                 SizedBox(width: 10),
+                  //                 RichText(
+                  //                   text: new TextSpan(
+                  //                     children: [
+                  //                       TextSpan(
+                  //                         text: null !=
+                  //                                     provider.selectedRestModel
+                  //                                         .reviews!.numOfRows &&
+                  //                                 provider.selectedRestModel
+                  //                                         .reviews!.numOfRows ==
+                  //                                     0
+                  //                             ? "No review yet "
+                  //                             : provider.selectedRestModel
+                  //                                 .reviews!.branchAvgRating
+                  //                                 .toString(),
+                  //                         style: new TextStyle(
+                  //                           color: Colors.black,
+                  //                         ),
+                  //                       ),
+                  //                       new TextSpan(
+                  //                         text:
+                  //                             'Based on (${provider.selectedRestModel.reviews!.numOfRows}) ratings ',
+                  //                         style: new TextStyle(
+                  //                           fontSize: 12,
+                  //                           color: Colors.grey,
+                  //                         ),
+                  //                       ),
+                  //                     ],
+                  //                   ),
+                  //                 ),
+                  //                 Expanded(
+                  //                   child: InkWell(
+                  //                     onTap: () {
+                  //                       Navigator.of(context).push(
+                  //                           MaterialPageRoute(
+                  //                               builder:
+                  //                                   (BuildContext context) =>
+                  //                                       ReviewRestaurent()));
+                  //                     },
+                  //                     child: Text(
+                  //                       'Reviews',
+                  //                       style: TextStyle(
+                  //                           color: Colors.deepOrange,
+                  //                           fontWeight: FontWeight.w600),
+                  //                       textAlign: TextAlign.right,
+                  //                     ),
+                  //                   ),
+                  //                 ),
+                  //               ],
+                  //             ),
+                  //             Divider(
+                  //               height: 25,
+                  //             ),
+                  //             Row(
+                  //               children: [
+                  //                 Icon(
+                  //                   Icons.access_time,
+                  //                   color: Colors.grey.shade700,
+                  //                   size: 25,
+                  //                 ),
+                  //                 SizedBox(width: 10),
+                  //                 RichText(
+                  //                   text: new TextSpan(
+                  //                     children: [
+                  //                       new TextSpan(
+                  //                         text:
+                  //                             'Within ${provider.selectedRestModel.branchDetails!.merchantBranchOrderTime} mins ',
+                  //                         style: new TextStyle(
+                  //                             color: Colors.black),
+                  //                       ),
+                  //                       // new TextSpan(
+                  //                       //   text:
+                  //                       //       '(${provider.selectedRestModel.branchDetails!.countryCurrency} 0.590 delivery) ',
+                  //                       //   style: new TextStyle(
+                  //                       //       fontSize: 12,
+                  //                       //       color: Colors.grey),
+                  //                       // ),
+                  //                     ],
+                  //                   ),
+                  //                 ),
+                  //               ],
+                  //             ),
+                  //             Divider(
+                  //               height: 25,
+                  //             ),
+                  //             Row(
+                  //               children: [
+                  //                 Icon(
+                  //                   Icons.local_offer_outlined,
+                  //                   color: Colors.pinkAccent,
+                  //                   size: 25,
+                  //                 ),
+                  //                 SizedBox(width: 10),
+                  //                 Text('2 RO Off Orders 7 Rials or More!',
+                  //                     style: TextStyle(
+                  //                       color: Colors.pinkAccent,
+                  //                       fontWeight: FontWeight.w500,
+                  //                     ))
+                  //               ],
+                  //             ),
+                  //             Divider(
+                  //               height: 25,
+                  //             ),
+                  //             Container(
+                  //               padding: EdgeInsets.all(15),
+                  //               width: Helper.getScreenWidth(context),
+                  //               decoration: BoxDecoration(
+                  //                   borderRadius: BorderRadius.circular(12.0),
+                  //                   color: Colors.grey.shade100),
+                  //               child: Text(
+                  //                 'Delivered by us, with live tracking',
+                  //                 style: TextStyle(
+                  //                   color: Colors.black,
+                  //                   fontWeight: FontWeight.w600,
+                  //                 ),
+                  //               ),
+                  //             ),
+                  //
+                  //             // ProductCategoryItem(widget.merchantBranchId,
+                  //             //     widget.lat, widget.lng),
+                  //           ],
+                  //         ),
+                  //       )
+                  //     ])),
+                  //     SliverPersistentHeader(
+                  //         pinned: true,
+                  //         floating: false,
+                  //         delegate: PersistentHeader(
+                  //             TabBar(
+                  //               indicatorWeight: 2.0,
+                  //               onTap: (int val) {
+                  //                 VerticalScrollableTabBarStatus.setIndex(val);
+                  //               },
+                  //               // physics: const AlwaysScrollableScrollPhysics(),
+                  //               isScrollable: true,
+                  //               labelColor: Colors.white,
+                  //               unselectedLabelColor: Colors.black,
+                  //               indicatorColor: Colors.transparent,
+                  //               padding: EdgeInsets.zero,
+                  //               controller: tabController,
+                  //               indicator: BoxDecoration(
+                  //                 color: Colors.red,
+                  //                 borderRadius: BorderRadius.circular(10),
+                  //               ),
+                  //               labelStyle: const TextStyle(
+                  //                   fontSize: 12, fontWeight: FontWeight.w500),
+                  //               tabs: provider.categoryList
+                  //                   .map((t) => Tab(
+                  //                         text: t.categoryName,
+                  //                       ))
+                  //                   .toList(),
+                  //             ),
+                  //             tabController!
+                  //
+                  //             // pinned: true,
+                  //             )),
+                  //     SliverList(
+                  //         delegate: SliverChildListDelegate([
+                  //       Padding(
+                  //         padding: const EdgeInsets.all(4),
+                  //         child: Column(
+                  //           crossAxisAlignment: CrossAxisAlignment.start,
+                  //           children: [
+                  //             // Row(
+                  //             //   children: [
+                  //             //     Text(
+                  //             //       'VEG',
+                  //             //       style: TextStyle(
+                  //             //           fontWeight: FontWeight.w600),
+                  //             //     ),
+                  //             //     Switch(
+                  //             //       value: isSwitched,
+                  //             //       onChanged: (value) {
+                  //             //         setState(() {
+                  //             //           isSwitched = value;
+                  //             //         });
+                  //             //       },
+                  //             //       activeTrackColor: Colors.green.shade100,
+                  //             //       activeColor: Colors.green.shade300,
+                  //             //     ),
+                  //             //   ],
+                  //             // ),
+                  //             // SizedBox(
+                  //             //   height: 20,
+                  //             // ),
+                  //             RestaurantProductsList(isSwitched, tabController),
+                  //             // SizedBox(
+                  //             //   height: 30,
+                  //             // ),
+                  //           ],
+                  //         ),
+                  //       ),
+                  //     ]))
+                  //   ],
+                  // ),
                   Align(
                       alignment: Alignment.bottomCenter,
                       child: Padding(
@@ -1038,3 +1400,56 @@
     return false;
   }
 }
+class SliverAppBarDelegate extends SliverPersistentHeaderDelegate {
+  SliverAppBarDelegate(this.tabBar);
+
+  final TabBar tabBar;
+
+  @override
+  double get minExtent => tabBar.preferredSize.height;
+  @override
+  double get maxExtent => tabBar.preferredSize.height;
+
+  @override
+  Widget build(BuildContext context, double shrinkOffset, bool overlapsContent) {
+    return Container(
+      padding: const EdgeInsets.only(left: 20.0, right: 20.0, top: 8.0, bottom: 8.0),
+      color: Colors.white,
+      child: tabBar,
+    );
+  }
+
+  @override
+  bool shouldRebuild(SliverAppBarDelegate oldDelegate) {
+    return false;
+  }
+}
+
+class Delegate extends SliverPersistentHeaderDelegate {
+  Delegate({
+    required this.child,
+    this.minHeight = 56.0,
+    this.maxHeight = 56.0,
+  });
+
+  final Widget child;
+  final double minHeight;
+  final double maxHeight;
+
+  @override
+  double get minExtent => minHeight;
+
+  @override
+  double get maxExtent => maxHeight;
+
+  @override
+  Widget build(BuildContext context, double shrinkOffset, bool overlapsContent) {
+    return SizedBox.expand(child: child);
+  }
+
+  @override
+  bool shouldRebuild(Delegate oldDelegate) {
+    return maxHeight != oldDelegate.maxHeight || minHeight != oldDelegate.minHeight || child != oldDelegate.child;
+  }
+}
+
